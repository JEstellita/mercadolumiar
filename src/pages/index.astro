---
import BaseLayout from '../layouts/BaseLayout.astro';
import ProgressBar from '../components/ProgressBar.astro';

// Dados padr√£o durante build - ser√£o atualizados no cliente
const progress = { 
  totalMonthly: 0, 
  goal: Number(import.meta.env.PUBLIC_GOAL_MONTHLY || 150), 
  supporters: 0, 
  stale: true 
};

// Dados dos produtos em destaque (mockup)
const featuredProducts = [
  {
    title: "Hortali√ßas Org√¢nicas",
    description: "Verduras frescas direto da horta",
    image: "ü•¨",
    producer: "S√≠tio Verde",
    price: "Pre√ßo Vari√°vel"
  },
  {
    title: "Mel Artesanal",
    description: "Mel puro das montanhas de Lumiar",
    image: "üçØ", 
    producer: "Api√°rio da Serra",
    price: "Pre√ßo Vari√°vel"
  },
  {
    title: "Queijos Artesanais",
    description: "Queijos frescos e curados",
    image: "üßÄ",
    producer: "Latic√≠nios do Vale",
    price: "Pre√ßo Vari√°vel"
  }
];

// Dados dos servi√ßos em destaque (mockup)
const featuredServices = [
  {
    title: "Servi√ßos Culin√°rios",
    description: "Comida caseira e eventos",
    image: "üçΩÔ∏è",
    provider: "Chef da Ro√ßa",
    price: "Pre√ßo Vari√°vel"
  },
  {
    title: "Montagem e Manuten√ß√£o",
    description: "Computadores e notebooks",
    image: "üíª",
    provider: "TechLumiar",
    price: "Pre√ßo Vari√°vel"
  },
  {
    title: "Transporte Local",
    description: "Transporte de pessoas e encomendas",
    image: "üöó",
    provider: "Transporte Ecol√≥gico",
    price: "Pre√ßo Vari√°vel"
  }
];
---

<BaseLayout title="Mercado Biorregional Lumiar - Compre local, construa futuro">
  <!-- Hero Section -->
  <section class="hero-section">
    <div class="container">
      <!-- Hero badge -->
      <div class="hero-badge anime-fade-in">
        <svg width="16" height="16" fill="currentColor" viewBox="0 0 20 20">
          <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
        </svg>
        Economia Local Sustent√°vel
      </div>

      <!-- Hero title -->
      <h1 class="hero-title anime-slide-up">
        Compre local,<br>
        <span class="hero-gradient">construa futuro</span>
      </h1>

      <!-- Hero description -->
      <p class="hero-description anime-fade-in-delayed">
        Conecte-se diretamente com <strong>produtores e prestadores de servi√ßos</strong> 
        em Lumiar e Biorregi√£o. Uma plataforma que fortalece nossa economia local.
      </p>

      <!-- Hero CTAs -->
      <div class="hero-buttons anime-buttons">
        <a href="/produtores" class="btn btn-primary btn-large">
          <span class="btn-icon">üõí</span>
          <span>Ver Produtores</span>
        </a>
        <a href="/campanha" class="btn btn-secondary btn-large">
          <span class="btn-icon">üìà</span>
          <span>Apoiar Campanha</span>
        </a>
      </div>
    </div>

    <!-- Background decoration -->
    <div class="bg-decoration">
      <div class="decoration-circle decoration-1 anime-float"></div>
      <div class="decoration-circle decoration-2 anime-float-delayed"></div>
      <div class="decoration-circle decoration-3 anime-float"></div>
      <div class="decoration-circle decoration-4 anime-float-delayed"></div>
    </div>
  </section>

  <!-- Progress Section -->
  <section class="section">
    <div class="container">
      <div style="text-align: center; margin-bottom: 2rem;">
        <h2 class="section-title">Progresso da Campanha</h2>
        <p class="section-subtitle">Ajude-nos a manter a plataforma funcionando</p>
      </div>
      
      <ProgressBar total={progress.totalMonthly} goal={progress.goal} supporters={progress.supporters} stale={progress.stale} />
      
      <div style="text-align: center; margin-top: 2rem;">
        <a href="/campanha" style="display: inline-flex; align-items: center; color: #16a34a; text-decoration: none; font-weight: 500;">
          Ver detalhes da campanha
          <svg style="width: 1rem; height: 1rem; margin-left: 0.5rem;" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        </a>
      </div>
    </div>
  </section>

  <!-- Products Section -->
  <section class="section features-section">
    <div class="container">
      <div class="section-header">
        <h2 class="section-title">Produtos em Destaque</h2>
        <p class="section-subtitle">Direto de quem produz em Lumiar e Biorregi√£o</p>
      </div>

      <div class="features-grid">
        {featuredProducts.map((product, index) => (
          <div class="feature-card product-card" style={`--delay: ${index * 0.1}s`}>
            <div class="feature-icon">
              <span class="icon-emoji">{product.image}</span>
              <div class="icon-bg"></div>
            </div>
            <div class="feature-content">
              <h3 class="feature-title">{product.title}</h3>
              <p class="feature-description">{product.description}</p>
              <div class="feature-meta">
                <span class="producer-tag">{product.producer}</span>
                <span class="price-tag">{product.price}</span>
              </div>
            </div>
            <div class="feature-overlay"></div>
          </div>
        ))}
      </div>

      <div class="section-cta">
        <a href="/produtores" class="btn btn-primary btn-large">
          <span>Ver Todos os Produtores</span>
          <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        </a>
      </div>
    </div>
  </section>

  <!-- Services Section -->
  <section class="section services-section">
    <div class="container">
      <div class="section-header">
        <h2 class="section-title">Servi√ßos Locais</h2>
        <p class="section-subtitle">Prestadores de servi√ßos da nossa comunidade</p>
      </div>

      <div class="services-grid">
        {featuredServices.map((service, index) => (
          <div class="service-window" style={`--delay: ${index * 0.15}s`}>
            <div class="window-header">
              <div class="window-controls">
                <div class="control close"></div>
                <div class="control minimize"></div>
                <div class="control maximize"></div>
              </div>
              <div class="window-title">Servi√ßo Local</div>
            </div>
            <div class="window-content">
              <div class="service-icon">
                <span class="icon-emoji">{service.image}</span>
              </div>
              <div class="service-info">
                <h3 class="service-title">{service.title}</h3>
                <p class="service-description">{service.description}</p>
                <div class="service-meta">
                  <span class="provider-badge">{service.provider}</span>
                  <span class="price-tag">{service.price}</span>
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>

      <div class="section-cta">
        <a href="/produtores" class="btn btn-outline btn-large">
          <span>Ver Todos os Servi√ßos</span>
          <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
        </a>
      </div>
    </div>
  </section>

  <!-- How it works -->
  <section class="section" style="background: white;">
    <div class="container">
      <div style="text-align: center; margin-bottom: 3rem;">
        <h2 class="section-title">Como Funciona</h2>
        <p class="section-subtitle">Simples, direto e transparente</p>
      </div>

      <div class="grid grid-3">
        <div style="text-align: center;">
          <div class="step-circle">
            <span class="step-number">1</span>
          </div>
          <h3 class="step-title">Encontre</h3>
          <p class="step-description">
            Navegue pelos produtores e prestadores de servi√ßos locais. 
            Veja fotos, descri√ß√µes e informa√ß√µes de contato.
          </p>
        </div>

        <div style="text-align: center;">
          <div class="step-circle">
            <span class="step-number">2</span>
          </div>
          <h3 class="step-title">Conecte</h3>
          <p class="step-description">
            Entre em contato direto via WhatsApp. Tire d√∫vidas, 
            negocie pre√ßos e combine a entrega.
          </p>
        </div>

        <div style="text-align: center;">
          <div class="step-circle">
            <span class="step-number">3</span>
          </div>
          <h3 class="step-title">Apoie</h3>
          <p class="step-description">
            Ao comprar local, voc√™ fortalece nossa economia 
            e contribui para um futuro mais sustent√°vel.
          </p>
        </div>
      </div>
    </div>
  </section>

  <!-- CTA Section -->
  <section class="cta-section">
    <div class="container">
      <h2 class="cta-title">
        Junte-se √† nossa comunidade
      </h2>
      <p class="cta-description">
        Ajude-nos a construir uma economia local forte e sustent√°vel. 
        Sua contribui√ß√£o faz a diferen√ßa.
      </p>
      
      <div class="hero-buttons">
        <a href="/assinar" class="btn btn-white">
          üå± Apoiar Mensalmente
        </a>
        <a href="/whatsapp" class="btn btn-outline">
          üí¨ Falar no WhatsApp
        </a>
      </div>
    </div>
  </section>

  <script is:inline>
    // Simular dados de progresso
    document.addEventListener('DOMContentLoaded', function() {
      const progressSection = document.querySelector('[data-total]');
      if (progressSection) {
        const mockData = {
          totalMonthly: 75.50,
          goal: 150,
          supporters: 3
        };
        
        progressSection.setAttribute('data-total', mockData.totalMonthly.toString());
        progressSection.setAttribute('data-goal', mockData.goal.toString());
        progressSection.setAttribute('data-supporters', mockData.supporters.toString());
        
        // Dispatch view_home event
        if (typeof window !== 'undefined' && window.dispatchEvent) {
          window.dispatchEvent(new CustomEvent('track', {
            detail: {
              event: 'view_home',
              total: mockData.totalMonthly,
              goal: mockData.goal,
              supporters: mockData.supporters
            }
          }));
        }
      }

      // Anime.js animations (with fallbacks)
      if (typeof window !== 'undefined' && window.anime) {
        const anime = window.anime;
        
        // Simple animations without TypeScript issues
        try {
          // Fade in animations
          anime({
            targets: '.anime-fade-in',
            opacity: [0, 1],
            duration: 1000,
            delay: 300,
            easing: 'easeOutQuart'
          });

          anime({
            targets: '.anime-fade-in-delayed',
            opacity: [0, 1],
            duration: 1000,
            delay: 600,
            easing: 'easeOutQuart'
          });

          // Slide up animation for title
          anime({
            targets: '.anime-slide-up',
            translateY: [50, 0],
            opacity: [0, 1],
            duration: 1200,
            delay: 400,
            easing: 'easeOutCubic'
          });

          // Buttons animation
          anime({
            targets: '.anime-buttons .btn',
            scale: [0.8, 1],
            opacity: [0, 1],
            duration: 800,
            delay: function(_el, i) { return (i * 100) + 800; },
            easing: 'easeOutBack'
          });

          // Floating decorations
          anime({
            targets: '.anime-float',
            translateY: [-10, 10],
            duration: 3000,
            direction: 'alternate',
            loop: true,
            easing: 'easeInOutSine'
          });

          anime({
            targets: '.anime-float-delayed',
            translateY: [-10, 10],
            duration: 3000,
            direction: 'alternate',
            loop: true,
            delay: 1500,
            easing: 'easeInOutSine'
          });

          // Logo animation on load
          anime({
            targets: '.logo-img',
            scale: [0.8, 1],
            rotate: [0, 360],
            duration: 1000,
            easing: 'easeOutElastic(1, .8)'
          });

        } catch (error) {
          console.log('Anime.js not available:', error);
        }
      }

      // Cards animation on scroll (without anime.js dependency)
      const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
      };

      const observer = new IntersectionObserver(function(entries) {
        entries.forEach(function(entry) {
          if (entry.isIntersecting) {
            const element = entry.target;
            element.style.opacity = '1';
            element.style.transform = 'translateY(0)';
            element.style.transition = 'all 0.6s ease';
            observer.unobserve(entry.target);
          }
        });
      }, observerOptions);

      // Observe cards
      document.querySelectorAll('.product-card, .service-card').forEach(function(card) {
        card.style.opacity = '0';
        card.style.transform = 'translateY(30px)';
        observer.observe(card);
      });
    });
  </script>
</BaseLayout>