---
export interface Props {
  title: string;
  description?: string;
  og?: string;
}

const { title, description = "Mercado Biorregional Lumiar - Conectando produtores locais", og = "/og.png" } = Astro.props;
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
---

<!DOCTYPE html>
<html lang="pt-BR">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" href="/favicon.svg" />
    <title>{title}</title>
    <meta name="description" content={description} />
    <link rel="canonical" href={canonicalURL} />
    
    <!-- Open Graph -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={og} />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:type" content="website" />
    
    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Playfair+Display:wght@400;500;600&display=swap" rel="stylesheet">
    
    <!-- Anime.js -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.1/anime.min.js"></script>

    <style>
      /* === RESET & BASE === */
      *, *::before, *::after {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
      }

      html {
        scroll-behavior: smooth;
      }

      body {
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
        line-height: 1.7;
        color: #2d3748;
        background: #fefefe;
        overflow-x: hidden;
      }

      /* === LAYOUT === */
      .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 2rem;
      }

      /* === HEADER MÁGICO === */
      .header {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        z-index: 1000;
        background: rgba(254, 254, 254, 0.95);
        backdrop-filter: blur(20px);
        border-bottom: 1px solid rgba(45, 55, 72, 0.1);
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      }

      .header-content {
        display: flex;
        align-items: center;
        justify-content: space-between;
        height: 80px;
      }

      .logo {
        display: flex;
        align-items: center;
        gap: 1rem;
        text-decoration: none;
        transition: transform 0.3s ease;
      }

      .logo:hover {
        transform: translateY(-2px);
      }

      .logo-img {
        width: 48px;
        height: 48px;
        object-fit: contain;
        transition: all 0.3s ease;
      }

      .logo-text {
        font-family: 'Playfair Display', serif;
        font-size: 1.5rem;
        font-weight: 600;
        color: #2d5016;
        letter-spacing: -0.02em;
      }

      .nav {
        display: flex;
        gap: 2.5rem;
        align-items: center;
      }

      .nav-link {
        text-decoration: none;
        color: #4a5568;
        font-weight: 500;
        position: relative;
        transition: color 0.3s ease;
      }

      .nav-link:hover {
        color: #2d5016;
      }

      .nav-link::after {
        content: '';
        position: absolute;
        bottom: -4px;
        left: 0;
        width: 0;
        height: 2px;
        background: linear-gradient(90deg, #2d5016, #68d391);
        transition: width 0.3s ease;
      }

      .nav-link:hover::after {
        width: 100%;
      }

      /* === BUTTONS === */
      .btn {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.75rem 1.5rem;
        border-radius: 12px;
        text-decoration: none;
        font-weight: 500;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        border: none;
        cursor: pointer;
        font-size: 0.95rem;
      }

      .btn-primary {
        background: linear-gradient(135deg, #2d5016, #68d391);
        color: white;
        box-shadow: 0 4px 14px rgba(45, 80, 22, 0.3);
      }

      .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(45, 80, 22, 0.4);
      }

      .btn-outline {
        background: transparent;
        color: #2d5016;
        border: 2px solid rgba(45, 80, 22, 0.2);
      }

      .btn-outline:hover {
        background: #2d5016;
        color: white;
        border-color: #2d5016;
      }

      /* === HERO MÁGICO === */
      .hero {
        min-height: 100vh;
        display: flex;
        align-items: center;
        position: relative;
        background: linear-gradient(135deg, #f7fafc 0%, #edf2f7 100%);
        overflow: hidden;
      }

      .hero::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%2368d391' fill-opacity='0.05'%3E%3Ccircle cx='30' cy='30' r='2'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E") repeat;
        opacity: 0.3;
      }

      .hero-content {
        text-align: center;
        max-width: 800px;
        margin: 0 auto;
        position: relative;
        z-index: 2;
      }

      .hero-badge {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        background: rgba(45, 80, 22, 0.1);
        color: #2d5016;
        padding: 0.5rem 1rem;
        border-radius: 50px;
        font-size: 0.875rem;
        font-weight: 500;
        margin-bottom: 2rem;
        border: 1px solid rgba(45, 80, 22, 0.2);
      }

      .hero-title {
        font-family: 'Playfair Display', serif;
        font-size: clamp(2.5rem, 5vw, 4rem);
        font-weight: 600;
        color: #1a202c;
        margin-bottom: 1.5rem;
        line-height: 1.2;
        letter-spacing: -0.02em;
      }

      .hero-subtitle {
        font-size: 1.25rem;
        color: #4a5568;
        margin-bottom: 3rem;
        font-weight: 400;
        line-height: 1.6;
      }

      .hero-actions {
        display: flex;
        gap: 1rem;
        justify-content: center;
        flex-wrap: wrap;
      }

      /* === SECTIONS === */
      .section {
        padding: 6rem 0;
      }

      .section-header {
        text-align: center;
        margin-bottom: 4rem;
      }

      .section-title {
        font-family: 'Playfair Display', serif;
        font-size: clamp(2rem, 4vw, 3rem);
        font-weight: 600;
        color: #1a202c;
        margin-bottom: 1rem;
      }

      .section-subtitle {
        font-size: 1.125rem;
        color: #718096;
        max-width: 600px;
        margin: 0 auto;
      }

      /* === CARDS NATURAIS === */
      .cards-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 2rem;
      }

      .card {
        background: white;
        border-radius: 20px;
        padding: 2rem;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
        border: 1px solid rgba(0, 0, 0, 0.05);
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        overflow: hidden;
      }

      .card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(90deg, #2d5016, #68d391);
        transform: scaleX(0);
        transition: transform 0.3s ease;
      }

      .card:hover {
        transform: translateY(-8px);
        box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
      }

      .card:hover::before {
        transform: scaleX(1);
      }

      .card-icon {
        width: 60px;
        height: 60px;
        background: linear-gradient(135deg, #f0fff4, #c6f6d5);
        border-radius: 16px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 1.5rem;
        font-size: 1.5rem;
      }

      .card-title {
        font-size: 1.25rem;
        font-weight: 600;
        color: #2d3748;
        margin-bottom: 1rem;
      }

      .card-description {
        color: #718096;
        line-height: 1.6;
        margin-bottom: 1.5rem;
      }

      .card-meta {
        display: flex;
        justify-content: space-between;
        align-items: center;
        font-size: 0.875rem;
      }

      .card-provider {
        color: #4a5568;
        font-weight: 500;
      }

      .card-price {
        background: linear-gradient(135deg, #2d5016, #68d391);
        color: white;
        padding: 0.25rem 0.75rem;
        border-radius: 12px;
        font-weight: 600;
      }

      /* === ANIMATIONS === */
      .fade-in {
        opacity: 0;
        transform: translateY(30px);
      }

      .slide-in-left {
        opacity: 0;
        transform: translateX(-50px);
      }

      .slide-in-right {
        opacity: 0;
        transform: translateX(50px);
      }

      /* === RESPONSIVE === */
      @media (max-width: 768px) {
        .nav {
          display: none;
        }

        .hero-actions {
          flex-direction: column;
          align-items: center;
        }

        .container {
          padding: 0 1rem;
        }

        .section {
          padding: 4rem 0;
        }

        .cards-grid {
          grid-template-columns: 1fr;
        }
      }

      /* === MAGICAL PARTICLES === */
      .particles {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        overflow: hidden;
        pointer-events: none;
      }

      .particle {
        position: absolute;
        width: 4px;
        height: 4px;
        background: #68d391;
        border-radius: 50%;
        opacity: 0.6;
      }
    </style>
  </head>

  <body>
    <!-- Header -->
    <header class="header">
      <div class="container">
        <div class="header-content">
          <a href="/" class="logo">
            <div class="logo-img">🌱</div>
            <span class="logo-text">Mercado Lumiar</span>
          </a>
          
          <nav class="nav">
            <a href="/campanha" class="nav-link">Campanha</a>
            <a href="/produtores" class="nav-link">Produtores</a>
            <a href="/sobre" class="nav-link">Sobre</a>
            <a href="/assinar" class="btn btn-primary">Apoiar</a>
          </nav>
        </div>
      </div>
    </header>

    <!-- Main Content -->
    <main>
      <slot />
    </main>

    <!-- Animation Scripts -->
    <script>
      // TypeScript declaration for anime.js
      declare var anime: any;
      
      // Animate on scroll
      const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
      };

      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            (entry.target as HTMLElement).style.opacity = '1';
            (entry.target as HTMLElement).style.transform = 'translateY(0) translateX(0)';
          }
        });
      }, observerOptions);

      // Observe elements when DOM is loaded
      document.addEventListener('DOMContentLoaded', () => {
        document.querySelectorAll('.fade-in, .slide-in-left, .slide-in-right').forEach(el => {
          observer.observe(el);
        });

        // Create floating particles
        createParticles();
      });

      function createParticles() {
        const heroSection = document.querySelector('.hero');
        if (!heroSection) return;

        const particles = document.createElement('div');
        particles.className = 'particles';
        heroSection.appendChild(particles);

        for (let i = 0; i < 20; i++) {
          const particle = document.createElement('div');
          particle.className = 'particle';
          particle.style.left = Math.random() * 100 + '%';
          particle.style.top = Math.random() * 100 + '%';
          particle.style.animationDuration = (Math.random() * 3 + 2) + 's';
          particle.style.animationDelay = Math.random() * 2 + 's';
          particles.appendChild(particle);

          // Animate particle
          anime({
            targets: particle,
            translateY: [0, -100],
            translateX: [0, Math.random() * 100 - 50],
            opacity: [0.6, 0],
            duration: 3000,
            easing: 'easeOutQuart',
            loop: true,
            delay: Math.random() * 2000
          });
        }
      }
    </script>
  </body>
</html>
